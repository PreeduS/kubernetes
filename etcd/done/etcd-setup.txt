# https://computingforgeeks.com/setup-etcd-cluster-on-centos-debian-ubuntu/         # done link


Hostname	        IP Address
etcd1	            192.168.100.100
etcd2	            192.168.100.101
etcd3	            192.168.100.102



# set as static for each host

vim /etc/sysconfig/network-scripts/ifcfg-<name>       # ifcfg-eth0

# BOOTPROTO=dhcp                # dhcp/static/none
DEVICE=eth0
ONBOOT=yes
IPADDR=192.168.100.100
NETMASK=255.255.255.0
GATEWAY=192.168.100.1


# dhclient -r eth0              # Tell dhclient to release the current lease it has from the server.
# dhclient -H <hostName>        # Specify the host-name option to send to the DHCP server



ifdown eth0
ifup eth0

ip a show eth0

vim /etc/hostname
    
# update hosts files on all nodes

sudo tee -a /etc/hosts <<EOF
192.168.100.100     etcd etcd1
192.168.100.101     etcd2
192.168.100.102     etcd3
EOF


# 1.  Download and Install the etcd Binaries (All nodes)
# https://github.com/etcd-io/etcd/releases

ETCD_VER=v3.3.18
DOWNLOAD_URL=https://github.com/etcd-io/etcd/releases/download

rm -f /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz
rm -rf /tmp/etcd-download-test && mkdir -p /tmp/etcd-download-test

curl -L ${DOWNLOAD_URL}/${ETCD_VER}/etcd-${ETCD_VER}-linux-amd64.tar.gz -o /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz
# -L, --location            # use redirect
# -o, --output <file>       # write output to <file> instead of stdout. 

tar xzvf /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz -C /tmp/etcd-download-test --strip-components=1
# -C                # change to directory DIR

rm -f /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz

/tmp/etcd-download-test/etcd --version
/tmp/etcd-download-test/etcdctl --version

# Move binaries to /usr/local/bin directory.

sudo mv /tmp/etcd-download-test/etcd* /usr/local/bin/

etcd --version
etcdctl --version

# 2. Create etcd directories and user (All nodes)

/etc/etcd           # for configs
/var/lib/etcd       # for data


# Create a etcd system user/group.

sudo groupadd --system etcd
sudo useradd -s /sbin/nologin --system -g etcd etcd


# Then create data and configurations directories for etcd.

sudo mkdir -p /var/lib/etcd/
sudo mkdir /etc/etcd
sudo chown -R etcd:etcd /var/lib/etcd/



# 3. Configure the etcd on all nodes

# We need to populate systemd service unit files on all the three servers. 
# But first, some environment variables are required before we can proceed.

# On each server, save these variables by running the commands below.

INT_NAME="eth0"
ETCD_HOST_IP=$(ip addr show $INT_NAME | grep "inet\b" | awk '{print $2}' | cut -d/ -f1)
ETCD_NAME=$(hostname -s)


# INT_NAME - is the name of your network interface to be used for cluster traffic.
# ETCD_HOST_IP - is the internal IP address of the specified network interface
# ETCD_NAME – Each etcd member must have a unique name within an etcd cluster.


cat <<EOF | sudo tee /etc/systemd/system/etcd.service
[Unit]
Description=etcd service
Documentation=https://github.com/etcd-io/etcd

[Service]
Type=notify
User=etcd
ExecStart=/usr/local/bin/etcd \\
  --name ${ETCD_NAME} \\
  --data-dir=/var/lib/etcd \\
  --initial-advertise-peer-urls http://${ETCD_HOST_IP}:2380 \\
  --listen-peer-urls http://${ETCD_HOST_IP}:2380 \\
  --listen-client-urls http://0.0.0.0:2379 \\
  --advertise-client-urls http://0.0.0.0:2379 \\
  --initial-cluster-token etcd-cluster-0 \\
  --initial-cluster etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380 \\
  --initial-cluster-state new \

[Install]
WantedBy=multi-user.target
EOF


#  --listen-peer-urls http://${ETCD_HOST_IP}:2380 \\
#  --listen-client-urls http://${ETCD_HOST_IP}:2379,http://127.0.0.1:2379 \\
#  --advertise-client-urls http://${ETCD_HOST_IP}:2379

#   --listen-peer-urls  http://0.0.0.0:2380




# For CentOS / RHEL Linux distributions, set SELinux mode to permissive.

sudo setenforce 0
sudo sed -i 's/^SELINUX=.*/SELINUX=permissive/g' /etc/selinux/config


# If you have active firewall service, allow ports 2379 and 2380.
# disable firewall
systemctl disable firewalld
systemctl stop firewalld

# ch
iptables -I INPUT -p tcp -m tcp --dport 2379 -j ACCEPT
iptables -I INPUT -p tcp -m tcp --dport 2380 -j ACCEPT
# iptables -F

# 4. Start the etcd Server

sudo systemctl daemon-reload
sudo systemctl enable etcd
sudo systemctl start etcd

sudo systemctl status etcd


# 5. Test Etcd Cluster installation
# etcdctl member list

# To use etcd v3, you need to explicitly specify version.

ETCDCTL_API=3; etcdctl member list


etcdctl cluster-health

# journalctl -t etcd --since today

---

# Writing to etcd:

etcdctl set /message "Hello World"


# Read the value of message back – It should work on all nodes.

etcdctl get /message



Create directory.

etcdctl mkdir /myservice
etcdctl set /myservice/container1 localhost:8080

etcdctl ls /myservice
    # /myservice/container1

    
# 6. Test Leader failure

# When a leader fails, the etcd cluster automatically elects a new leader.
# During the leader election, the cluster cannot process any writes. 
# Write requests sent during the election are queued for processing until a new leader is elected.


etcdctl member list

# take down etcd on the node that has the leader
sudo systemctl stop etcd

etcdctl member list

